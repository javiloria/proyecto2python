# Generated by Django 3.0.1 on 2019-12-28 22:37

#para generar los primeros datos
from django.db import migrations
from django.contrib.auth.hashers import make_password #para encriptar contraseña

def createTermin(app, schema_editor):
    Termin = app.get_model('gestorAppTG','Termin')
    Termin.objects.create(id="201915", descripcion='primer semestre del año académico 2019')
    Termin.objects.create(id="201925", descripcion='segundo semestre del año académico 2019')
    Termin.objects.create(id="202015", descripcion='primer semestre del año académico 2020')
    Termin.objects.create(id="202025", descripcion='segundo semestre del año académico 2020')

def createUsers(app, schema_editor):
    User = app.get_model('gestorAppTG','User')
    User.objects.create(
        username="admin",
        password=make_password("admin123"),
        esAdmin=True,
        cedula=123,
        primer_nombre="hjashkf",
        primer_apellido="kdasjjdla",
        ucab_email="hdhad@est.ucab.edu.ve",
        email="heri@gmail.com",
        telefono="01290391",
        type='Externo'

    )
    User.objects.create(
        username="gestor",
        password=make_password("gestor123"),
        esGestor=True,
        cedula=1234,
        primer_nombre="hjashkf",
        primer_apellido="kdasjjdla",
        ucab_email="hdhasd@est.ucab.edu.ve",
        email="herdi@gmail.com",
        telefono="01290391",
        type='Externo'
    )
    User.objects.create(
    	username="invitado",
        password=make_password("invitado123"),
        esInvitado=True,
        cedula=1223,
        primer_nombre="hjashkf",
        primer_apellido="kkdasjjdla",
        ucab_email="hdhkad@est.ucab.edu.ve",
        email="hekri@gmail.com",
        telefono="01290391",
        type='Externo'
    )
    User.objects.create(
    	username="jorge",
        password=make_password("jorge123"),
        esInvitado=True,
        cedula=27513724,
        primer_nombre="Jorge",
        primer_apellido="Viloria",
        ucab_email="javiloria.16@est.ucab.edu.ve",
        email="javiloria100@gmail.com",
        telefono="0424328264",
        type='Estudiante'
    )
    User.objects.create(
    	username="elias",
        password=make_password("elias123"),
        esInvitado=True,
        cedula=26089396,
        primer_nombre="José",
        primer_apellido="Barrientos",
        ucab_email="jebarrientos.16@est.ucab.edu.ve",
        email="joseeli54@gmail.com",
        telefono="04142398425",
        type='Estudiante'
    )
    User.objects.create(
    	username="ysabel",
        password=make_password("ysabel123"),
        esInvitado=True,
        cedula=2345632,
        primer_nombre="Ysabel",
        primer_apellido="Ardila",
        ucab_email="ytardila.16@est.ucab.edu.ve",
        email="ysabelardila@gmail.com",
        telefono="04247249399",
        type='Estudiante'
    )
    User.objects.create(
    	username="herick",
        password=make_password("herick123"),
        esInvitado=True,
        cedula=2677289,
        primer_nombre="Herick",
        primer_apellido="Navarro",
        ucab_email="hdnavarro@est.ucab.edu.ve",
        email="hdnavarro@gmail.com",
        telefono="04140200884",
        type='Estudiante'
    )
    User.objects.create(
    	username="max",
        password=make_password("max123"),
        esInvitado=True,
        cedula=27892345,
        primer_nombre="Max",
        primer_apellido="Quiroz",
        ucab_email="mjquiroz.16@est.ucab.edu.ve",
        email="maxquiroz@gmail.com",
        telefono="0424067894",
        type='Estudiante'
    )
    User.objects.create(
    	username="cholo",
        password=make_password("cholo123"),
        esInvitado=True,
        cedula=24592343,
        primer_nombre="Miguel",
        primer_apellido="Ordoñez",
        ucab_email="maordonez.16@est.ucab.edu.ve",
        email="miguelaordonez@gmail.com",
        telefono="0412783456",
        type='Estudiante'
    )
    User.objects.create(
    	username="mario",
        password=make_password("mario123"),
        esInvitado=True,
        cedula=27890367,
        primer_nombre="Mario",
        primer_apellido="Martínez",
        ucab_email="mmmartinez.18@est.ucab.edu.ve",
        email="mariomartinez12@gmail.com",
        telefono="0424245678",
        type='Estudiante'
    )            
    User.objects.create(
    	username="maria",
        password=make_password("maria123"),
        esInvitado=True,
        cedula=26789123,
        primer_nombre="Maria",
        primer_apellido="Da silva",
        ucab_email="mddasilva.17@est.ucab.edu.ve",
        email="mariadsd123@gmail.com",
        telefono="0414573444",
        type='Estudiante'
    )
    User.objects.create(
    	username="rebeca",
        password=make_password("rebeca123"),
        esInvitado=True,
        cedula=28832431,
        primer_nombre="Rebeca",
        primer_apellido="Barbella",
        ucab_email="rcbarbella.18@est.ucab.edu.ve",
        email="rebebarbella2012@gmail.com",
        telefono="0416783489",
        type='Estudiante'
    )
    User.objects.create(
    	username="josem",
        password=make_password("josem123"),
        esInvitado=True,
        cedula=25672674,
        primer_nombre="José",
        primer_apellido="De freitos",
        ucab_email="jmdefreitos.15@est.ucab.edu.ve",
        email="josemanueldf99@gmail.com",
        telefono="0416783983",
        type='Estudiante'
    )
    User.objects.create(
    	username="kelly",
        password=make_password("kelly123"),
        esInvitado=True,
        cedula=26597676,
        primer_nombre="Kelly",
        primer_apellido="Peña",
        ucab_email="kkpena.15@est.ucab.edu.ve",
        email="kellykpena@gmail.com",
        telefono="04261041228",
        type='Estudiante'
    )
    User.objects.create(
    	username="maribel",
        password=make_password("maribel123"),
        esInvitado=True,
        cedula=26897211,
        primer_nombre="Maribel",
        primer_apellido="Aranguren",
        ucab_email="maaranguren.16@est.ucab.edu.ve",
        email="maribelaranguren@gmail.com",
        telefono="04242792715",
        type='Estudiante'
    )
    User.objects.create(
    	username="julio",
        password=make_password("julio123"),
        esInvitado=True,
        cedula=26777838,
        primer_nombre="Julio",
        primer_apellido="Rojas",
        ucab_email="jjrojas.15@est.ucab.edu.ve",
        email="juliorojas@gmail.com",
        telefono="0416899365",
        type='Estudiante'
    )
    User.objects.create(
    	username="miguel",
        password=make_password("miguel123"),
        esInvitado=True,
        cedula=25992234,
        primer_nombre="Miguel",
        primer_apellido="Molina",
        ucab_email="mamolina.16@est.ucab.edu.ve",
        email="mamolinar1997@gmail.com",
        telefono="0424321654",
        type='Estudiante'
    )
    User.objects.create(
    	username="barbara",
        password=make_password("barbara123"),
        esInvitado=True,
        cedula=26978234,
        primer_nombre="Barbara",
        primer_apellido="Viloria",
        ucab_email="bjviloria.16@est.ucab.edu.ve",
        email="barbaraviloria221@gmail.com",
        telefono="0412456890",
        type='Estudiante'
    )                                                                                                                                               
    User.objects.create(
    	username="francisco",
        password=make_password("francisco123"),
        esInvitado=True,
        cedula=12789765,
        primer_nombre="Francisco",
        primer_apellido="Gomez",
        ucab_email="fgomez@est.ucab.edu.ve",
        email="franciscogomez@gmail.com",
        telefono="04267249399",
        type='Profesor'
    )

    User.objects.create(
    	username="goyo",
        password=make_password("goyo123"),
        esInvitado=True,
        cedula=8923765,
        primer_nombre="José",
        primer_apellido="Castillo",
        ucab_email="jcastillo@est.ucab.edu.ve",
        email="jgcastillop@gmail.com",
        telefono="0412605343",
        type='Profesor'
    )
    User.objects.create(
    	username="manuel",
        password=make_password("manuel123"),
        esInvitado=True,
        cedula=10276583,
        primer_nombre="Manuel",
        primer_apellido="Pena",
        ucab_email="mpena@est.ucab.edu.ve",
        email="manuelpena@gmail.com",
        telefono="0412789546",
        type='Profesor'
    )
    User.objects.create(
    	username="fanny",
        password=make_password("fanny123"),
        esInvitado=True,
        cedula=10212903,
        primer_nombre="Fanny",
        primer_apellido="Hernandez",
        ucab_email="fannyh@est.ucab.edu.ve",
        email="fannyhernandez@gmail.com",
        telefono="0414759566",
        type='Profesor'
    )
    User.objects.create(
    	username="alexander",
        password=make_password("alexander123"),
        esInvitado=True,
        cedula=10234890,
        primer_nombre="Alexander",
        primer_apellido="Cardenas",
        ucab_email="acardenas@est.ucab.edu.ve",
        email="acardenas.berroteran@hotmail.com",
        telefono="0424332890",
        type='Profesor'
    )
    User.objects.create(
    	username="cipriano",
        password=make_password("cipriano123"),
        esInvitado=True,
        cedula=12783423,
        primer_nombre="Cipriano",
        primer_apellido="Machado",
        email="ciprianomachado@gmail.com",
        telefono="0416782834",
        type='Externo'
    )
    User.objects.create(
    	username="javier",
        password=make_password("javier123"),
        esInvitado=True,
        cedula=12793421,
        primer_nombre="Javier",
        primer_apellido="Rojas",
        email="javierrojas@gmail.com",
        telefono="0412255734",
        type='Externo'
    )       
    User.objects.create(
    	username="jose",
        password=make_password("jose123"),
        esInvitado=True,
        cedula=19793429,
        primer_nombre="José",
        primer_apellido="Catalayud",
        email="josecatalayud@pwc.com",
        telefono="0416782321",
        type='Externo'
    )
    User.objects.create(
    	username="carla",
        password=make_password("carla123"),
        esInvitado=True,
        cedula=26783765,
        primer_nombre="Carla",
        primer_apellido="Torres",
        email="carlatorres@gmail.com",
        telefono="0424634765",
        type='Externo'
    )
    User.objects.create(
    	username="mariom",
        password=make_password("mariom123"),
        esInvitado=True,
        cedula=26778898,
        primer_nombre="Mario",
        primer_apellido="Balotelli",
        ucab_email="mabaoltelli.15@est.ucab.edu.ve",
        email="mariobalotelli@hotmail.com",
        telefono="0416897885",
        type='Estudiante'
    )
    User.objects.create(
    	username="jhonatan",
        password=make_password("jhonatan123"),
        esInvitado=True,
        cedula=25632788,
        primer_nombre="Jhonatan",
        primer_apellido="Aranguren",
        ucab_email="jjaranguren.16@est.ucab.edu.ve",
        email="jjarangurenv123@yahoo.com",
        telefono="0426783945",
        type='Estudiante'
    )
    User.objects.create(
    	username="pablo",
        password=make_password("pablo123"),
        esInvitado=True,
        cedula=27890838,
        primer_nombre="Pablo",
        primer_apellido="Fernandez",
        ucab_email="pofernandeza.16@est.ucab.edu.ve",
        email="pablooferandez@gmail.com",
        telefono="0414800369",
        type='Estudiante'
    )
    User.objects.create(
    	username="america",
        password=make_password("america123"),
        esInvitado=True,
        cedula=26987234,
        primer_nombre="America",
        primer_apellido="Rojas",
        ucab_email="ammrojas.15@est.ucab.edu.ve",
        email="americarojas@gmail.com",
        telefono="0426548902",
        type='Estudiante'
    )
    User.objects.create(
    	username="carmen",
        password=make_password("carmen123"),
        esInvitado=True,
        cedula=27888999,
        primer_nombre="Carmen",
        primer_apellido="Rojas",
        ucab_email="cmrojas.16@est.ucab.edu.ve",
        email="carmenmariarojas@gmail.com",
        telefono="0426578890",
        type='Estudiante'
    )
    User.objects.create(
    	username="ana",
        password=make_password("ana123"),
        esInvitado=True,
        cedula=27899938,
        primer_nombre="Ana",
        primer_apellido="Fernandez",
        ucab_email="anaafernandez.16@est.ucab.edu.ve",
        email="anamariafernandez@gmail.com",
        telefono="0424328789",
        type='Estudiante'
    )
    User.objects.create(
    	username="sara",
        password=make_password("sara123"),
        esInvitado=True,
        cedula=27900123,
        primer_nombre="Sara",
        primer_apellido="Dentale",
        ucab_email="smdentale.16@est.ucab.edu.ve",
        email="saramdentale@gmail.com",
        telefono="0412789091",
        type='Estudiante'
    )
    User.objects.create(
    	username="josefina",
        password=make_password("josefina123"),
        esInvitado=True,
        cedula=25666999,
        primer_nombre="Josefina",
        primer_apellido="Navarro",
        ucab_email="janavarro.14@est.ucab.edu.ve",
        email="josefamaria190@gmail.com",
        telefono="0426781098",
        type='Estudiante'
    )
    User.objects.create(
    	username="manuela",
        password=make_password("manuela123"),
        esInvitado=True,
        cedula=27788900,
        primer_nombre="Manuela",
        primer_apellido="Rodriguez",
        ucab_email="marodriguez.14@est.ucab.edu.ve",
        email="manuelaarodriguez@gmail.com",
        telefono="0414321890",
        type='Estudiante'
    )                                 
def createPropuestas(app,schema_editor):
    Propuesta = app.get_model('gestorAppTG', 'Propuesta')
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Diseño de un sistema de control de operación de un automóvil alquilado a través de RFID',
        estatus_id=1, 
        escuela_id=2,
        estudiante_1_id=4,
        estudiante_2_id=5, 
        tutor_academico_id= 19, 
        tutor_empresa_id=24, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Compresión de imágenes médicas basada en transformada ondícula (WAVELET) para aplicaciones en telemedicina',
        estatus_id=1, 
        escuela_id=2,
        estudiante_1_id=6, 
        tutor_academico_id= 20, 
        tutor_empresa_id=25, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Diseño de un sistema de monitorización en la lavanderia industriales utilizando tecnologa de identificacion por radio frecuencia (RFID)',
        estatus_id=1, 
        escuela_id=2,
        estudiante_1_id=7,
        tutor_academico_id= 21, 
        tutor_empresa_id=26, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Diseño de la red telemática del nuevo edificio de la Facultad de Ingeniería de la Universidad Católica Andrés Bello',
        estatus_id=2, 
        escuela_id=2,
        estudiante_1_id=8,
        tutor_academico_id= 22, 
        tutor_empresa_id=27, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='diseño de un modelo de colas para gestionar la atencion de clientes en establecimientos comerciales',
        estatus_id=2, 
        escuela_id=1,
        estudiante_1_id=9,
        tutor_academico_id= 23, 
        tutor_empresa_id=24, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Herramienta Case multiplataforma para la transformación de una base de datos relacional a no relacional',
        estatus_id=2, 
        escuela_id=1,
        estudiante_1_id=10,
        estudiante_2_id=11,
        tutor_academico_id= 19, 
        tutor_empresa_id=25, 
        termin_id=202025 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Sistema de control de inventario y pedidos para la empresa Zona 3 Internacional CA',
        estatus_id=3, 
        escuela_id=1,
        estudiante_1_id=12,
        tutor_academico_id= 20, 
        tutor_empresa_id=26, 
        termin_id=202025 
    )                                          
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Diseño e implementacion de un bot conversacional para la obtencion de información de apoyo a la gerencia de Venefoil CA',
        estatus_id=3, 
        escuela_id=1,
        estudiante_1_id=13,
        tutor_academico_id= 21, 
        tutor_empresa_id=27, 
        termin_id=202025 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Creación de un programa de salud y seguridad laboral para los laboratorios-talleres, ubicados en el edificio de los laboratorios de una universidad privada en Caracas',
        estatus_id=3, 
        escuela_id=4,
        estudiante_1_id=14,
        tutor_academico_id= 22, 
        tutor_empresa_id=24, 
        termin_id=202025 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Propuesta de mejora para la gestión de almacén de las bodegas de materia prima de una empresa del sector químico y calzado',
        estatus_id=4, 
        escuela_id=4,
        estudiante_1_id=15,
        tutor_academico_id= 23, 
        tutor_empresa_id=25, 
        termin_id=202025 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Evaluación de los costos asociados a la gestión de un plan de mantenimiento preventivo para una flota de ambulancias de un servicio médico prepagado',
        estatus_id=4, 
        escuela_id=4,
        estudiante_1_id=16,
        tutor_academico_id= 19, 
        tutor_empresa_id=26, 
        termin_id=201915 
    )
    Propuesta.objects.create(
        entrega_fecha='2019-12-19 00:00:00', 
        titulo='Diseño de un modelo de gestión de inventario para una empresa fabricante de mobiliario para uso de hogar y oficina',
        estatus_id=4, 
        escuela_id=4,
        estudiante_1_id=17,
        estudiante_2_id=18,
        tutor_academico_id= 20, 
        tutor_empresa_id=27, 
        termin_id=201925 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-01-19 00:00:00', 
        titulo='Aplicación de las tecnologías CAD/CAE en el ambito de la ingeniería concurrente : caso de un equipo médico',
        estatus_id=3, 
        escuela_id=1,
        estudiante_1_id=28, 
        tutor_academico_id= 19, 
        tutor_empresa_id=25, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-01-23 00:00:00', 
        titulo='Propuestas de mejoras en los procesos logísticos del centro de distribución de una empresa de alimentos ubicadas en Caracas',
        estatus_id=3, 
        escuela_id=2,
        estudiante_1_id=29, 
        tutor_academico_id= 20, 
        termin_id=202015 
    )

    Propuesta.objects.create(
        entrega_fecha='2020-02-15 00:00:00', 
        titulo='Diseño de un sistema integrado de vigilancia y apoyo para trenes basado en tecnología IP ',
        estatus_id=3, 
        escuela_id=3,
        estudiante_1_id=30, 
        tutor_academico_id= 21,  
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-02-23 00:00:00', 
        titulo='Diseño de un sistema de reconocimiento del habla para controlar dispositivos elèctricos',
        estatus_id=3, 
        escuela_id=4,
        estudiante_1_id=31, 
        tutor_academico_id= 22, 
        tutor_empresa_id=25, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-02-10 00:00:00', 
        titulo='Ambiente de evaluación de arquitecturas de software',
        estatus_id=3, 
        escuela_id=1,
        estudiante_1_id=32, 
        tutor_academico_id= 23, 
        tutor_empresa_id=26, 
        termin_id=202015 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-04-23 00:00:00', 
        titulo='Business inteligence en ABB Venezuela',
        estatus_id=3, 
        escuela_id=2,
        estudiante_1_id=33, 
        tutor_academico_id= 19, 
        tutor_empresa_id=24, 
        termin_id=202025 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-04-19 00:00:00', 
        titulo='Arquitectura eficiente, estable y segura para el soporte de un sistema de integración de redes inmobiliarias MLS',
        estatus_id=3, 
        escuela_id=3,
        estudiante_1_id=34, 
        tutor_academico_id= 20, 
        termin_id=202025 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-05-21 00:00:00', 
        titulo='Análisis del sistema de cloacas de la Universidad Católica Andrés Bello y su función futura',
        estatus_id=3, 
        escuela_id=4,
        estudiante_1_id=35, 
        tutor_academico_id= 21, 
        tutor_empresa_id=23, 
        termin_id=202025 
    )
    Propuesta.objects.create(
        entrega_fecha='2020-05-14 00:00:00', 
        titulo='Aplicación de los microcomputadores para el diseño de redes colectoras de aguas servidas',
        estatus_id=3, 
        escuela_id=1,
        estudiante_1_id=36, 
        tutor_academico_id= 22, 
        termin_id=202025 
    )


def createTesis(app,schema_editor):
    Tesis = app.get_model('gestorAppTG', 'Tesis')
    
    Tesis.objects.create(
        id='TG7' , 
        titulo='Sistema de control de inventario y pedidos para la empresa Zona 3 Internacional CA',
        estatus_id=1,
        escuela_id=1,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=7
    )
    Tesis.objects.create(
        id='TG8' , 
        titulo='Diseño e implementacion de un bot conversacional para la obtencion de información de apoyo a la gerencia de Venefoil CA',
        estatus_id=1,
        escuela_id=1,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=8
    )
    Tesis.objects.create(
        id='TG9' , 
        titulo='Creación de un programa de salud y seguridad laboral para los laboratorios-talleres, ubicados en el edificio de los laboratorios de una universidad privada en Caracas',
        estatus_id=2,
        escuela_id=4,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=9
    )
    Tesis.objects.create(
        id='TG13' , 
        titulo='Aplicación de las tecnologías CAD/CAE en el ambito de la ingeniería concurrente : caso de un equipo médico',
        estatus_id=2,
        escuela_id=1,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=13
    )
    Tesis.objects.create(
        id='TG14' , 
        titulo='Propuestas de mejoras en los procesos logísticos del centro de distribución de una empresa de alimentos ubicadas en Caracas',
        estatus_id=3,
        escuela_id=2,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=14
    )
    Tesis.objects.create(
        id='TG15' , 
        titulo='Diseño de un sistema integrado de vigilancia y apoyo para trenes basado en tecnología IP',
        estatus_id=3,
        escuela_id=3,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=15
    )
    Tesis.objects.create(
        id='TG16' , 
        titulo='Diseño de un sistema de reconocimiento del habla para controlar dispositivos elèctricos',
        estatus_id=4,
        escuela_id=4,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=16
    )
    Tesis.objects.create(
        id='TG17' , 
        titulo='Ambiente de evaluación de arquitecturas de software',
        estatus_id=4,
        escuela_id=1,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=17
    )
    Tesis.objects.create(
        id='TG18' , 
        titulo='Business inteligence en ABB Venezuela',
        estatus_id=5,
        escuela_id=2,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=18
    )
    Tesis.objects.create(
        id='TG19' , 
        titulo='Arquitectura eficiente, estable y segura para el soporte de un sistema de integración de redes inmobiliarias MLS',
        estatus_id=5,
        escuela_id=3,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=19
    )
    Tesis.objects.create(
        id='TG20' , 
        titulo='Análisis del sistema de cloacas de la Universidad Católica Andrés Bello y su función futura',
        estatus_id=6,
        escuela_id=4,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=20
    )
    Tesis.objects.create(
        id='TG21' , 
        titulo='Aplicación de los microcomputadores para el diseño de redes colectoras de aguas servidas',
        estatus_id=6,
        escuela_id=1,
        nrc=25000,
        descriptors="prueba",
        categoriaTema="prueba",
        fechaTope="2020-10-20",
        termin_id=202015,
        propuesta_id=21
    )
    

def createEstatusPropuesta(app, schema_editor):
    EstatusPropuesta = app.get_model('gestorAppTG', 'EstatusPropuesta')
    EstatusPropuesta.objects.create(nombre='Por evaluar')
    EstatusPropuesta.objects.create(nombre='Diferida')
    EstatusPropuesta.objects.create(nombre='Aprobada')
    EstatusPropuesta.objects.create(nombre='Rechazada')

def createEstatusTG(app, schema_editor):
    EstatusTG = app.get_model('gestorAppTG', 'EstatusTG')
    EstatusTG.objects.create(nombre='Por entregar')
    EstatusTG.objects.create(nombre='Entregado y pendiente por defender')
    EstatusTG.objects.create(nombre='Diferido')
    EstatusTG.objects.create(nombre='Aprobado')
    EstatusTG.objects.create(nombre='Aprobado con solicitud de correcciones')
    EstatusTG.objects.create(nombre='Rechazado')

def createEscuelas(app, schema_editor):
    Escuela = app.get_model('gestorAppTG', 'Escuela')
    Escuela.objects.create(nombre='Ingeneria Informatica')
    Escuela.objects.create(nombre='Ingeneria Telecomunicaciones')
    Escuela.objects.create(nombre='Ingeneria Civil')
    Escuela.objects.create(nombre='Ingeneria Industrial')

def createDefensa(app,schema_editor):
	Defensa = app.get_model('gestorAppTG', 'Defensa')
	Defensa.objects.create(
    id='DTG7',
    fecha_defensa='2020-10-10' ,
    jurado_1= True,
    jurado_2= True,
    jurado_3= True,
    calificacion= 18,
    mencion_publicacion= False,
    mencion_honorifica = False,
    correcciones= True ,
    fecha_correciones='2020-10-20' ,
    tesis_id='TG7'
    )

class Migration(migrations.Migration):

    dependencies = [
        ('gestorAppTG', '0001_primera_migracion'),
    ]

    operations = [
        migrations.RunPython(createTermin),
        migrations.RunPython(createUsers),
        migrations.RunPython(createEstatusPropuesta),
        migrations.RunPython(createEstatusTG),
        migrations.RunPython(createEscuelas),
        migrations.RunPython(createPropuestas),
        migrations.RunPython(createTesis),
        migrations.RunPython(createDefensa)
    ]
